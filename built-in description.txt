            {name: "*", stackEffect: "num1 num2 -- num3", description: "num3 = num1 * num2"},
            {name: "/", stackEffect: "num1 num2 -- num3", description: "num3 = num1 / num2"},
            {name: "mod", stackEffect: "num1 num2 -- num3", description: "num3 = num1 % num2"},
            {name: "+", stackEffect: "any1 any2 -- any3", description: "any3 = any1 + any2"},
            {name: "-", stackEffect: "num1 num2 -- num3", description: "num3 = num1 - num2"},
            {name: ">>", stackEffect: "num1 num2 -- num3", description: "num3 = num1 >> num2"},
            {name: "<<", stackEffect: "num1 num2 -- num3", description: "num3 = num1 << num2"},
            {name: "2/", stackEffect: "num1 -- num2", description: "num2 = num1 >> 1"},
            {name: "2*", stackEffect: "num1 -- num2", description: "num2 = num1 << 1"},
            {name: "and", stackEffect: "num1 num2 -- num3", description: "num3 = num1 & num2 (bitwise AND)"},
            {name: "or", stackEffect: "num1 num2 -- num3", description: "num3 = num1 | num2 (bitwise OR)"},
            {name: "xor", stackEffect: "num1 num2 -- num3", description: "num3 = num1 ^ num2 (bitwise XOR)"},
            {name: "not", stackEffect: "num1 -- num2", description: "num2 = ~num1 (bitwise NOT)"},
            {name: "min", stackEffect: "num1 num2 -- num3", description: "num3 = minimum value between num1 and num2"},
            {name: "max", stackEffect: "num1 num2 -- num3", description: "num3 = maximum value between num1 and num2"},
            {name: "abs", stackEffect: "num1 -- num2", description: "num2 = absolute value of num1"},
            {name: "round", stackEffect: "number decimalPlaces -- roundedNum", description: "Round-up the number in specified decimal place"},
            {name: "ms", stackEffect: "num --", description: "num: number of miliseconds to delay"},
            {name: ";", stackEffect: "--", description: "; means return to calling word"},
            {name: "push", stackEffect: "any -- => R: -- any", description: "any is popped from Data stack and pushed into Return stack"},
            {name: "pop", stackEffect: "-- any <= R: any --", description: "any is popped from Return stack and pushed into Data stack"},
            {name: "dup", stackEffect: "any -- any any", description: ""},
            {name: "drop", stackEffect: "any -- ", description: ""},
            {name: "over", stackEffect: "any1 any2 -- any1 any2 any1", description: ""},
            {name: "swap", stackEffect: "any1 any2 -- any2 any1", description: ""},
            {name: "nip", stackEffect: "any1 any2 -- any2", description: ""},
            {name: "if", stackEffect: "num --", description: "jump to 'then' if num is zero"},
            {name: "-if", stackEffect: "num --", description: "jump to 'then' if num is positive number"},
            {name: "+if", stackEffect: "num --", description: "jump to 'then' if num is negative number"},
            {name: "then", stackEffect: "--", description: ""},
            {name: "=", stackEffect: "any1 any2 -- any1 any2 num", description: "num = 1 if any1 equal to any2, else 0"},
            {name: ">", stackEffect: "any1 any2 -- any1 any2 num", description: "num = 1 if any1 greater than any2, else 0"},
            {name: "<", stackEffect: "any1 any2 -- any1 any2 num", description: "num = 1 if any1 less than any2, else 0"},
            {name: ">=", stackEffect: "any1 any2 -- any1 any2 num", description: "num = 1 if any1 greater than or equal to any2, else 0"},
            {name: "<=", stackEffect: "any1 any2 -- any1 any2 num", description: "num = 1 if any1 less than or equal to any2, else 0"},
            {name: "for", stackEffect: "num -- => R: -- num", description: "num is the count of loop. NOTE: 'for' loop will actually loop count+1 times."},
            {name: "next", stackEffect: "--", description: "decerement top of Return stack if its not 0 and jump to word after 'for'"},
            {name: "i", stackEffect: "-- num", description: "num = current count of loop which is current top of Return stack"},
            {name: "@", stackEffect: "<variable name> -- any", description: "any = value fetched from the variable"},
            {name: "!", stackEffect: "any <variable name> --", description: "any: value to be stored in the variable"},
            {name: "load", stackEffect: "str --", description: "str: either filename, path+filename, or a line of code"},
            {name: ".", stackEffect: "--", description: "top of D is popped and printed in output window"},
            {name: ".s", stackEffect: "--", description: "print contents of Data stack and Return stack in normal format"},
            {name: ".sih", stackEffect: "--", description: "print contents of Data stack and Return stack in hex format"},
            {name: "cls", stackEffect: "--", description: "it clears the output window"},
            {name: "num?", stackEffect: "any -- any num", description: "num = 1 if any is a number, else 0"},
            {name: "str?", stackEffect: "any -- any num", description: "num = 1 if any is a string, else 0"},
            {name: "utime", stackEffect: "-- num", description: "num = the number of milliseconds elapsed since midnight, January 1, 1970 (UTC)"},
            {name: "long-timestamp", stackEffect: "-- str", description: "Push timestamp in long format (eg. November 16 2024 at 12:54:41 PM GMT+9)"},
            {name: "medium-timestamp", stackEffect: "-- str", description: "Push timestamp in medium format (eg. Nov 16 2024 12:54:41 PM)"},
            {name: "short-timestamp", stackEffect: "-- str", description: "Push timestamp in short format (eg. 11/16/24 12:54 PM)"},
            {name: "time12H", stackEffect: "-- str", description: "Push time in 12H format"},
            {name: "time24H", stackEffect: "-- str", description: "Push time in 24H format"},
            {name: "linebuffer<", stackEffect: "any --", description: "Concatenate num or str at the end of linebuffer"},
            {name: "overwrite", stackEffect: "--", description: "Set the overwrite flag to true used to print to output window"},
            {name: "linebuffer-len", stackEffect: "-- num", description: "Push the length of string inside linebuffer"},
            {name: "str-len", stackEffect: "str -- str num", description: "Push the length of string"},
            {name: "linebuffer", stackEffect: "-- str", description: "Push the string content of linebuffer"},
            {name: "open-file", stackEffect: "str -- fid", description: "str: either filename or path+filename"},
            {name: "read-line", stackEffect: "fid -- str num", description: "str = line read from the file based on fid, num = lenght of str"},
            {name: "write-at", stackEffect: "strData numLocation fid --", description: "Writes a string to the file in specified location"},
            {name: "close-file", stackEffect: "fid --", description: "it closes the specific file based on fid"},
            {name: "drop-all", stackEffect: "--", description: "it clears the Data stack"},
            {name: "count-all", stackEffect: "-- num", description: "num = total count of items in Data stack"},
            {name: "floor", stackEffect: "number -- roundedNum", description: "Round-down the number to the nearest integer"},
            {name: "nop", stackEffect: "--", description: "No operation"},
            {name: "sse-listen", stackEffect: "--", description: "Start SSE server listening at port 8080 (if not provided)"},
            {name: "sse-send", stackEffect: "any --", description: "Send data using SSE to client"},
            {name: "depth", stackEffect: "-- num", description: "Push the length of Data stack"},
            {name: "reverse", stackEffect: "any1 any2 anyN -- anyN any2 any1", description: "Reverse the arrangement of Data stack"},
            {name: "cr", stackEffect: "-- str", description: "Push carriage return as string"},
            {name: "pad-start", stackEffect: "str -- strPadded", description: "Pad a string from the start with spaces until the resulting string reaches the specified length"},
            {name: "pad-end", stackEffect: "str -- strPadded", description: "Pad a string from the end with spaces until the resulting string reaches the specified length"},
            {name: "split-str", stackEffect: "str1 str2 -- strN1 strN2 strNx num", description: "str1: string to be split, str2: separator, num = number of strings after split"},
            {name: "index-of", stackEffect: "strMain strSub (numStart) -- strMain numIndex", description: "Return the position of sub string within the main string if found"},
            {name: "sub-str", stackEffect: "strMain numStart numEnd -- strMain strSub", description: "Retrieves the sub string from main string based on start and end position"},
            {name: "to-base64", stackEffect: "str -- strInBase64", description: "Converts the string to base64 string"},
            {name: "to-urlencode", stackEffect: "str -- strURLenconded", description: "Converts the string to URL encoded string"},
            {name: "to-num", stackEffect: "str -- num", description: "Converts a number as string to a number"},
            {name: "to-USD", stackEffect: "num -- str", description: "Converts a number to a string in USD currency format"},
            {name: "to-str", stackEffect: "num (numDecimal) -- str", description: "Converts a number to string with option on decimal places"},
            {name: "http-get", stackEffect: "strURL -- strResponse", description: "Send HTTP GET request"},
            {name: "http-post", stackEffect: "strURL -- strResponse", description: "Send HTTP POST request, but set the header and body before sending."},
            {name: "http-set-header", stackEffect: "strKey strValue --", description: "Add a key/value to the header for HTTP POST"},
            {name: "http-delete-header", stackEffect: "strKey --", description: "Remove a key/value in the header for HTTP POST"},
            {name: "http-print-request", stackEffect: "--", description: "Prints the current request option for HTTP POST"},
            {name: "http-set-body", stackEffect: "strBody --", description: "Sets the body for HTTP POST"},
            {name: "say", stackEffect: "any --", description: "Convert number or string into audio speech"}